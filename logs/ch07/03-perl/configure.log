First let's make sure your kit is complete.  Checking...
Locating common programs...
Checking compatibility between /usr/bin/echo and builtin echo (if any)...
Symbolic links are supported.
Checking how to test for symbolic links...
You can test for symbolic links with 'test -h'.
Checking for cross-compile
No targethost for running compiler tests against defined, running locally
Good, your tr supports [:lower:] and [:upper:] to convert case.
Using [:upper:] and [:lower:] to convert case.
aix   	      dragonfly       irix_4   		netbsd        sco_2_3_4   
aix_3         dynix   	      irix_5   		newsos4       serenity   
aix_4         dynixptx        irix_6   		nonstopux     solaris_2   
altos486      epix   	      irix_6_0   	openbsd       stellar   
amigaos       esix4   	      irix_6_1   	opus          sunos_4_0   
atheos        fps   	      isc   		os2   	      sunos_4_1   
aux_3         freebsd         isc_2   		os390         super-ux   
bitrig        freemint        linux-android   	os400         svr4   
bsdos         gnu   	      linux   		posix-bc      svr5   
catamount     gnukfreebsd     lynxos   		qnx   	      ti1500   
convexos      gnuknetbsd      midnightbsd   	riscos        umips   
cxux          greenhills      minix   		sco   	      unicos   
cygwin        haiku   	      mips   		sco_2_3_0     unicosmk   
darwin        hpux   	      mirbsd   		sco_2_3_1     unisysdynix   
dcosx         i386   	      mpc   		sco_2_3_2     utekv   
dec_osf       interix         ncr_tower   	sco_2_3_3     vos   
Which of these apply, if any? [linux]  
Operating system name? [linux]  
Operating system version? [6.12.43+deb13-amd64]  
Installation prefix to use? (~name ok) [/usr]  
AFS does not seem to be running...
What installation prefix should I use for installing files? (~name ok)
[/usr]  
Build a threading Perl? [n]  
Build Perl for multiplicity? [n]  
Use which C compiler? [cc]  
Checking for GNU cc in disguise and/or its version number...
Now, how can we feed standard input to your C preprocessor...
Directories to use for library searches?
[/usr/local/lib /usr/lib /lib/../lib /usr/lib/../lib /lib]  
What is the file extension used for shared libraries? [so]  
Make shared library basenames unique? [n]  
Build Perl for SOCKS? [n]  
Try to use long doubles if available? [n]  
Checking for optional libraries...
What libraries to use? [-lpthread -ldl -lm -lutil -lc]  
What optimizer/debugger flag should be used? [-O2]  
Checking if your compiler accepts -fno-strict-aliasing
Yes, it does.
Checking if your compiler accepts -pipe
Yes, it does.
Checking if your compiler accepts -fstack-protector-strong
Yes, it does.
Any additional cc flags?
[-fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/usr/local/include]  
Let me guess what the preprocessor flags are...
Any additional ld flags (NOT including libraries)?
[ -fstack-protector-strong -L/usr/local/lib]  
Checking your choice of C compiler and flags for coherency...
Checking to see how big your integers are...
Checking to see if you have long long...
Checking to see how big your long longs are...
Computing filename position in cpp output for #include directives...
<inttypes.h> found.
Checking to see if you have int64_t...
Checking which 64-bit integer type we could use...
We could use 'long' for 64-bit integers.
Try to use maximal 64-bit support, if available? [y]  
Checking if your C library has broken 64-bit functions...
Checking for GNU C Library...
nm probably won't work on the GNU C Library.
Shall I use /usr/bin/nm to extract C symbols from the libraries? [n]  
Checking for C++...
Checking to see how big your double precision numbers are...
 
Checking to see if you have long double...
You have long double.
ldexpl() found.
 
Checking to see how big your long doubles are...
Your long doubles are 16 bytes long.
Checking the kind of long doubles you have...
You have x86 80-bit little endian long doubles.
Getting the current patchlevel...
egrep: warning: egrep is obsolescent; using grep -E
What is your architecture name [x86_64-linux]  
Add the Perl API version to your archname? [n]  
This architecture is naturally 64-bit, not changing architecture name.
Pathname where the public executables will reside? (~name ok) [/usr/bin]  
Use relocatable @INC? [n]  
Pathname where the private library files will reside? (~name ok)
[/usr/lib/perl5/5.42/core_perl]  
Where do you want to put the public architecture-dependent libraries? (~name ok)
[/usr/lib/perl5/5.42/core_perl]  
Other username to test security of setuid scripts with? [none]  
Well, the recommended value is *not* secure.
Does your kernel have *secure* setuid scripts? [n]  
Installation prefix to use for add-on modules and utilities? (~name ok)
[/usr]  
Pathname for the site-specific library files? (~name ok)
[/usr/lib/perl5/5.42/site_perl]  
List of earlier versions to include in @INC? [none]  
Checking to see how big your pointers are...
Do you wish to wrap malloc calls to protect against potential overflows? [y]  
Do you wish to attempt to use the malloc that comes with perl5? [n]  
Your system wants malloc to return 'void *', it would seem.
Your system uses void free(), it would seem.
Pathname for the site-specific architecture-dependent library files? (~name ok)
[/usr/lib/perl5/5.42/site_perl]  
Do you want to configure vendor-specific add-on directories? [y]  
Installation prefix to use for vendor-supplied add-ons? (~name ok) [/usr]  
Pathname for the vendor-supplied library files? (~name ok)
[/usr/lib/perl5/5.42/vendor_perl]  
Pathname for vendor-supplied architecture-dependent files? (~name ok)
[/usr/lib/perl5/5.42/vendor_perl]  
Colon-separated list of additional directories for perl to search? [none]  
Support DTrace if available? [n]  
Install any extra modules (y or n)? [n]  
Directory for the main Perl5 html pages? (~name ok) [none]  
Directory for the Perl5 module html pages? (~name ok) [none]  
dlopen() found.
<unistd.h> found.
Do you wish to use dynamic loading? [y]  
Source file to use for dynamic loading [ext/DynaLoader/dl_dlopen.xs]  
Any special flags to pass to cc -c to compile shared library modules?
[-fPIC]  
What command should be used to create dynamic libraries? [cc]  
Any special flags to pass to cc to create a dynamically loaded library?
[-shared -O2 -L/usr/local/lib -fstack-protector-strong]  
Any special flags to pass to cc to use dynamic linking? [-Wl,-E]  
ld supports scripting
Build a shared libperl.so (y/n) [y]  
What name do you want to give to the shared libperl? [libperl.so]  

Adding -Wl,-rpath,/usr/lib/perl5/5.42/core_perl/CORE to the flags
passed to cc so that the perl executable will find the
installed shared libperl.so.

System manual is in /usr/share/man/man1.
Where do the main Perl5 manual pages (source) go? (~name ok) [none]  
You can have filenames longer than 14 characters.
Where do the perl5 library man pages (source) go? (~name ok) [none]  
Figuring out host name...
Your host name appears to be "debian". Right? [y]  
What is your domain name? [.nonet]  
What is your e-mail address? [root@debian.nonet]  
Perl administrator e-mail address [root@debian.nonet]  
Do you want to use a version number suffix for installed binaries? [n]  
What shall I put after the #! to start up perl ("none" to not use #!)?
[/usr/bin/perl]  
Where do you keep publicly executable scripts? (~name ok) [/usr/bin]  
Pathname where the add-on public executables should be installed? (~name ok)
[/usr/bin]  
Pathname where the site-specific html pages should be installed? (~name ok)
[none]  
Pathname where the site-specific library html pages should be installed? (~name ok)
[none]  
Pathname where the site-specific manual pages should be installed? (~name ok)
[none]  
Pathname where the site-specific library manual pages should be installed? (~name ok)
[none]  
Pathname where add-on public executable scripts should be installed? (~name ok)
[/usr/bin]  
backtrace() found.
Use the "fast stdio" if available? [n]  
off_t found.
Checking to see how big your file offsets are...
fpos_t found.
Checking the size of fpos_t...
Try to understand large files, if available? [y]  
Rechecking to see how big your file offsets are...
Rechecking the size of fpos_t... 16 bytes.
Pathname for the vendor-supplied executables directory? (~name ok)
[/usr/bin]  
Pathname for the vendor-supplied html pages? (~name ok) [none]  
Pathname for the vendor-supplied html pages? (~name ok) [none]  
Pathname for the vendor-supplied manual section 1 pages? (~name ok) [none]  
Pathname for the vendor-supplied manual section 3 pages? (~name ok) [none]  
Pathname for the vendor-supplied scripts directory? (~name ok) [/usr/bin]  
qgcvt() found.
Checking the kind of doubles you have...
You have IEEE 754 64-bit little endian doubles.
Checking how to print long doubles...
gconvert NOT found.
gcvt() found.
sprintf() found.
I'll use sprintf to convert floats into a string.
fwalk() NOT found.
accept4() found.
access() found.
<sys/file.h> defines the *_OK access constants.
accessx() NOT found.
acosh() found.
aintl() NOT found.
alarm() found.
ctime64() NOT found.
localtime64() NOT found.
gmtime64() NOT found.
mktime64() NOT found.
difftime64() NOT found.
asctime64() NOT found.
<pthread.h> found.
<sys/types.h> found.
<sys/select.h> found.
Testing to see if we should include <sys/time.h>.
We'll include <sys/time.h>.
Checking to see if your struct tm has tm_zone field...
Checking to see if your struct tm has tm_gmtoff field...
asctime_r() found.
asinh() found.
atanh() found.
atolf() NOT found.
atoll() found.
Checking whether your compiler can handle __attribute__((format)) ...
Checking whether your compiler allows __printf__ format to be null ...
Checking whether your compiler can handle __attribute__((malloc)) ...
Checking whether your compiler can handle __attribute__((nonnull(1))) ...
Checking whether your compiler can handle __attribute__((noreturn)) ...
Checking whether your compiler can handle __attribute__((pure)) ...
Checking whether your compiler can handle __attribute__((unused)) ...
Checking whether your compiler can handle __attribute__((deprecated)) ...
Checking whether your compiler can handle __attribute__((warn_unused_result)) ...
Checking whether your compiler can handle __attribute__((always_inline)) ...
Checking whether your compiler can handle __attribute__((visibility)) ...
getpgrp() found.
You have to use getpgrp() instead of getpgrp(pid).
setpgrp() found.
You have to use setpgrp() instead of setpgrp(pid,pgrp).
Checking whether your compiler can handle __builtin_add_overflow ...
Checking whether your compiler can handle __builtin_sub_overflow ...
Checking whether your compiler can handle __builtin_mul_overflow ...
Checking whether your compiler can handle __builtin_choose_expr ...
Checking whether your compiler can handle __builtin_expect ...
Checking for C99 variadic macros.
You have C99 variadic macros.
You have void (*signal())().
Checking whether your C compiler can cast large floats to int32.
Checking whether your C compiler can cast negative float to unsigned.
cbrt() found.
chown() found.
chroot() found.
chsize() NOT found.
class() NOT found.
clearenv() found.
Hmm... Looks like you have Berkeley networking support.
socketpair() found.
Checking the availability sa_len in the sock struct ...
Checking the availability struct sockaddr_in6 ...
Checking the availability struct sockaddr_storage ...
Checking the availability sin6_scope_id in struct sockaddr_in6 ...
Checking the availability struct ip_mreq ...
Checking the availability struct ip_mreq_source ...
Checking the availability struct ipv6_mreq ...
Checking the availability struct ipv6_mreq_source ...
Checking the availability of certain socket constants...
<sys/uio.h> found.
Checking to see if your system supports struct cmsghdr...
copysign() found.
copysignl() found.
crypt() NOT found.
crypt() NOT found.
<crypt.h> NOT found.
crypt_r() NOT found.
ctermid() found.
ctermid_r() NOT found.
ctime_r() found.
cuserid() found.
dbmclose() NOT found.
difftime() found.
<dirent.h> found.
Your directory entries are struct dirent.
Your directory entry does not know about the d_namlen field.
Checking to see if DIR has a dd_fd member variable
<sys/dir.h> found.
<sys/ndir.h> NOT found.
dirfd() found.
dladdr() found.
dlerror() found.
<dlfcn.h> found.
What is the extension of dynamically loaded modules [so]  
Checking whether your dlsym() needs a leading underscore ...
dlsym doesn't need a leading underscore.
drand48_r() found.
dup2() found.
dup3() found.
localeconv_l() NOT found.
<xlocale.h> NOT found.
newlocale() found.
freelocale() found.
uselocale() found.
duplocale() found.
querylocale() NOT found.
eaccess() found.
endgrent() found.
<grp.h> found.
endgrent_r() NOT found.
endhostent() found.
<netdb.h> found.
endhostent_r() NOT found.
endnetent() found.
endnetent_r() NOT found.
endprotoent() found.
endprotoent_r() NOT found.
endpwent() found.
<pwd.h> found.
endpwent_r() NOT found.
endservent() found.
endservent_r() NOT found.
<sys/file.h> defines the O_* constants...
and you have the 3 argument form of open().
<sys/file.h> found.
We'll be including <sys/file.h>.
<fcntl.h> found.
We don't need to include <fcntl.h> if we include <sys/file.h>.
fork() found.
pipe() found.
Figuring out the flag used by open() for non-blocking I/O...
Let's see what value errno gets from read() on a O_NONBLOCK file...
erf() found.
erfc() found.
exp2() found.
expm1() found.
Checking how std your stdio is...
fchdir() found.
fchmod() found.
openat() found.
unlinkat() found.
renameat() found.
linkat() found.
fchmodat() found.
fchown() found.
fcntl() found.
Well, your system has some sort of fd_set available...
and you have the normal fd_set macros.
fdclose() NOT found.
fdim() found.
fdopendir() found.
fegetround() found.
ffs() found.
ffsl() found.
fgetpos() found.
finite() found.
finitel() found.
flock() found.
fma() found.
fmax() found.
fmin() found.
fp_class() NOT found.
Checking to see if you have fpclassify...
fp_classify() NOT found.
fp_classl() NOT found.
pathconf() found.
fpathconf() found.
fpclass() NOT found.
fpclassl() NOT found.
fpgetround() NOT found.
Checking to see if you have fpos64_t...
frexpl() found.
<sys/param.h> found.
<sys/mount.h> found.
Checking to see if your system supports struct fs_data...
fseeko() found.
fsetpos() found.
fstatfs() found.
statvfs() found.
fstatvfs() found.
fsync() found.
ftello() found.
Checking if you have a working futimes()
Yes, you have
A working gai_strerror() found.
<ndbm.h> NOT found.
<gdbm/ndbm.h> NOT found.
<gdbm-ndbm.h> NOT found.
getaddrinfo() found.
getcwd() found.
Checking to see if getenv() preserves a different thread's results
getenv() didn't destroy another thread's buffer
getespwnam() NOT found.
getfsstat() NOT found.
getgrent() found.
getgrent_r() found.
getgrgid_r() found.
getgrnam_r() found.
gethostbyaddr() found.
gethostbyname() found.
gethostent() found.
gethostname() found.
uname() found.
Shall I ignore gethostname() from now on? [n]  
gethostbyaddr_r() found.
gethostbyname_r() found.
gethostent_r() found.
getitimer() found.
getlogin() found.
getlogin_r() found.
getmnt() NOT found.
getmntent() found.
getnameinfo() found.
getnetbyaddr() found.
getnetbyname() found.
getnetent() found.
getnetbyaddr_r() found.
getnetbyname_r() found.
getnetent_r() found.
getpagesize() found.
getprotobyname() found.
getprotobynumber() found.
getprotoent() found.
getpgid() found.
getpgrp2() NOT found.
getppid() found.
getpriority() found.
getprotobyname_r() found.
getprotobynumber_r() found.
getprotoent_r() found.
getprpwnam() NOT found.
getpwent() found.
getpwent_r() found.
getpwnam_r() found.
getpwuid_r() found.
getservbyname() found.
getservbyport() found.
getservent() found.
getservbyname_r() found.
getservbyport_r() found.
getservent_r() found.
getspnam() found.
<shadow.h> found.
getspnam_r() found.
gettimeofday() found.
gmtime_r() found.
hasmntopt() found.
<netinet/in.h> found.
<arpa/inet.h> found.
htonl() found.
hypot() found.
ilogb() found.
ilogbl() found.
inet_aton() found.
inet_ntop() found.
inet_pton() found.
isascii() found.
isblank() found.
Checking to see if you have isfinite...
isfinitel() NOT found.
Checking to see if you have isinf...
isinfl() found.
Checking to see if you have isless...
Checking to see if you have isnan...
isnanl() found.
Checking to see if you have isnormal...
j0() found.
j0l() found.
killpg() found.
localeconv() found.
lchown() found.
LDBL_DIG found.
lgamma() found.
lgamma_r() found.
Checking to see if your libm supports _LIB_VERSION...
No, it does not (probably harmless)
link() found.
llrint() found.
llrintl() found.
llround() found.
llroundl() found.
<malloc/malloc.h> NOT found.
<malloc.h> found.
localtime_r() found.
lockf() found.
log1p() found.
log2() found.
logb() found.
lrint() found.
lrintl() found.
lround() found.
lroundl() found.
lstat() found.
madvise() found.
malloc_size() NOT found.
malloc_good_size() NOT found.
malloc_usable_size() found.
mblen() found.
mbrlen() found.
mbrtowc() found.
mbstowcs() found.
mbtowc() found.
memmem() found.
memrchr() found.
mkdir() found.
mkdtemp() found.
mkfifo() found.
mkostemp() found.
mkstemp() found.
mkstemps() found.
mktime() found.
<sys/mman.h> found.
mmap() found.
and it returns (caddr_t).
sqrtl() found.
scalbnl() found.
truncl() found.
modfl() found.
mprotect() found.
msgctl() found.
msgget() found.
msgsnd() found.
msgrcv() found.
You have the full msg*(2) library.
Checking to see if your system supports struct msghdr...
msync() found.
munmap() found.
nan() found.
nanosleep() found.
nearbyint() found.
nextafter() found.
nexttoward() found.
nice() found.
<langinfo.h> found.
nl_langinfo() found.
nl_langinfo_l() found.
 
Checking whether your compiler can handle struct bitfields that aren't 'int' or 'unsigned int' ...
Your C compiler supports struct bitfields besides 'int' and 'unsigned int'.
<quadmath.h> NOT found.
Choosing the C types to be used for Perl's internal types...
Checking how many bits of your UVs your NVs can preserve...
Your NVs can preserve only 53 bits of your UVs.
Checking to find the largest integer value your NVs can hold...
The largest integer your NVs can preserve is equal to 256.0*256.0*256.0*256.0*256.0*256.0*2.0*2.0*2.0*2.0*2.0
Checking whether NV 0.0 is all bits zero in memory...
0.0 is represented as all bits zero in memory
Checking to see if you have off64_t...
pause() found.
<locale.h> found.
<wctype.h> found.
towupper() found.

Checking to see if you have setlocale() and its behavior
Your system has setlocale()...
and it seems sane; you don't have a C.UTF-8 locale
Checking the syntax of LC_ALL when categories are set to different locales...
pipe2() found.
poll() found.
prctl() found.
readlink() found.
vfork() found.
Do you still want to use vfork()? [n]  
pthread_attr_setscope() found.
Checking to see if you have ptrdiff_t...
random_r() found.
readdir() found.
seekdir() found.
telldir() found.
rewinddir() found.
readdir64_r() found.
readdir_r() found.
readv() found.
recvmsg() found.
regcomp() found.
remainder() found.
remquo() found.
rename() found.
rint() found.
rmdir() found.
round() found.
scalbn() found.
select() found.
semctl() found.
semget() found.
semop() found.
You have the full sem*(2) library.
You do not have union semun in <sys/sem.h>.
You can use union semun for semctl IPC_STAT.
You can also use struct semid_ds* for semctl IPC_STAT.
sendmsg() found.
setegid() found.
setenv() found.
seteuid() found.
setgrent() found.
setgrent_r() NOT found.
sethostent() found.
sethostent_r() NOT found.
setitimer() found.
setlinebuf() found.
setlocale_r() NOT found.
setnetent() found.
setnetent_r() NOT found.
setprotoent() found.
setpgid() found.
setpgrp2() NOT found.
setpriority() found.
setproctitle() NOT found.
setprotoent_r() NOT found.
setpwent() found.
setpwent_r() NOT found.
setregid() found.
setresgid() found.
setreuid() found.
setresuid() found.
setrgid() NOT found.
setruid() NOT found.
setservent() found.
setservent_r() NOT found.
setsid() found.
setvbuf() found.
shmctl() found.
shmget() found.
shmat() found.
and it returns (char *).
shmdt() found.
You have the full shm*(2) library.
sigaction() found.
pid_t found.
Checking if your siginfo_t has si_errno field...
Checking if your siginfo_t has si_pid field...
Checking if your siginfo_t has si_uid field...
Checking if your siginfo_t has si_addr field...
Checking if your siginfo_t has si_status field...
Checking if your siginfo_t has si_band field...
Checking if your siginfo_t has si_value field...
Checking if your siginfo_t has si_fd field...
<sunmath.h> NOT found.
Checking to see if you have signbit() available to work on double... Yes.
sigprocmask() found.
POSIX sigsetjmp found.
snprintf() found.
vsnprintf() found.
sockatmark() found.
socks5_init() NOT found.
srand48_r() found.
srandom_r() found.
stat() found.
<sys/stat.h> found.
Checking to see if your struct stat has st_blocks field...
<sys/vfs.h> found.
<sys/statfs.h> found.
Checking to see if your system supports struct statfs...
Checking to see if your struct statfs has f_flags field...
Your compiler supports static __inline__.
Checking how to access stdio streams by file descriptor number...
I can't figure out how to access stdio streams by file descriptor number.
strcoll() found.
strerror_l() found.
strerror_r() found.
strftime() found.
strlcat() found.
strlcpy() found.
strnlen() found.
strtod() found.
strtod_l() found.
strtol() found.
strtold() found.
strtold_l() found.
strtoll() found.
strtoq() found.
strtoul() found.
strtoull() found.
strtouq() found.
strxfrm() found.
strxfrm_l() found.
symlink() found.
syscall() found.
<sys/syscall.h> found.
sysconf() found.
system() found.
tcgetpgrp() found.
tcsetpgrp() found.
tgamma() found.
Your compiler supports _Thread_local.
time() found.
time_t found.
timegm() found.
<sys/times.h> found.
times() found.
clock_t found.
tmpnam_r() found.
towlower() found.
trunc() found.
truncate() found.
ttyname_r() found.
tzname[] found.
(Testing for character data alignment may crash the test.  That's okay.)
It seems that you must access character data in an aligned manner.
ualarm() found.
umask() found.
unordered() NOT found.
unsetenv() found.
usleep() found.
ustat() NOT found.
closedir() found.
Checking whether closedir() returns a status...
wait4() found.
waitpid() found.
wcrtomb() found.
A working wcscmp() found.
wcstombs() found.
A working wcsxfrm() found.
wctomb() found.
writev() found.
Checking alignment constraints...
Doubles must be aligned on a how-many-byte boundary? [8]  
Checking how long a character is (in bits)...
What is the length of a character (in bits)? [8]  
Checking to see how your cpp does stuff like concatenate tokens...
Oh!  Smells like ANSI's been here.
<db.h> NOT found.
Exclude . from @INC by default?  [y]  
Checking the kind of infinities and nans you have...
(The following tests may crash.  That's okay.)
Checking how many mantissa bits your doubles have...
Checking how many mantissa bits your long doubles have...
Checking how many mantissa bits your NVs have...
Using our internal random number implementation...
Determining whether or not we are on an EBCDIC system...
Nope, no EBCDIC, probably ASCII or some ISO Latin. Or UTF-8.
Checking how to flush all pending stdio output...
Your fflush(NULL) works okay for output streams.
Let's see if it clobbers input pipes...
fflush(NULL) seems to behave okay with input streams.
Checking the size of gid_t...
Checking the sign of gid_t...
Checking how to print 64-bit integers...
Checking the format strings to be used for Perl's internal types...
Checking the format string to be used for gids...
getgroups() found.
setgroups() found.
What type pointer is the second argument to getgroups() and setgroups()?
[gid_t]  
Checking the format strings to be used for Perl's internal 32bit-types...
Checking if your /usr/bin/make program sets $(MAKE)...
mode_t found.
It seems that va_copy() or similar will be needed.
size_t found.
What is the type for the 1st argument to gethostbyaddr? [char *]  
What is the type for the 2nd argument to gethostbyaddr? [size_t]  
What pager is used on your system? [/usr/ucb/more]  
Checking how to generate random libraries on your machine...
Your select() operates on 64 bits at a time.
Generating a list of signal names and numbers...
Checking the size of size_t...
Checking to see if you have socklen_t...
<socks.h> NOT found.
I'll be using ssize_t for functions returning a byte count.
Checking the size of st_dev...
Checking the sign of st_dev...
Checking the size of st_ino...
Checking the sign of st_ino...
Your stdio uses signed chars.
Checking the size of uid_t...
Checking the sign of uid_t...
Checking the format string to be used for uids...
Would you like to build perl with strict enabled by default? [n]  
Determining whether we can use sysctl with KERN_PROC_PATHNAME to find executing program...
I'm unable to compile the test program.
I'll assume no sysctl with KERN_PROC_PATHNAME here.
Determining whether we can use _NSGetExecutablePath to find executing program...
I'm unable to compile the test program.
I'll assume no _NSGetExecutablePath here.
Which compiler compiler (yacc or bison -y) shall I use? [yacc]  
<bfd.h> found.
<execinfo.h> found.
<fenv.h> found.
<fp.h> NOT found.
<fp_class.h> NOT found.
<gdbm.h> NOT found.
<ieeefp.h> NOT found.
<libutil.h> NOT found.
<mntent.h> found.
<net/errno.h> NOT found.
<netinet/tcp.h> found.
<poll.h> found.
<prot.h> NOT found.
Guessing which symbols your C compiler and preprocessor define...
Adding -D_FORTIFY_SOURCE=2 to ccflags...
tcsetattr() found.
You have POSIX termios.h... good!
<stdbool.h> found.
<stdint.h> found.
<sys/access.h> NOT found.
<sys/filio.h> NOT found.
<sys/ioctl.h> found.
<syslog.h> found.
<sys/mode.h> NOT found.
<sys/poll.h> found.
<sys/resource.h> found.
<sys/security.h> NOT found.
<sys/statvfs.h> found.
<sys/un.h> found.
<sys/utsname.h> found.
<sys/wait.h> found.
<ustat.h> NOT found.
<utime.h> found.
<wchar.h> found.
Looking for extensions...
What extensions do you wish to load dynamically?
[B Compress/Raw/Bzip2 Compress/Raw/Zlib Cwd Data/Dumper Devel/PPPort Devel/Peek Digest/MD5 Digest/SHA Encode Fcntl File/DosGlob File/Glob Filter/Util/Call Hash/Util Hash/Util/FieldHash I18N/Langinfo IO IPC/SysV List/Util MIME/Base64 Math/BigInt/FastCalc Opcode POSIX PerlIO/encoding PerlIO/mmap PerlIO/via SDBM_File Socket Storable Sys/Hostname Sys/Syslog Time/HiRes Time/Piece Unicode/Collate Unicode/Normalize XS/APItest XS/Typemap attributes mro re threads threads/shared]  
What extensions do you wish to load statically? [none]  
Stripping down executable paths...
Creating config.sh...
Doing variable substitutions on .SH files...
Extracting config.h (with variable substitutions)
cflags.SH: Adding -std=c99.
cflags.SH: Adding -Werror=pointer-arith.
cflags.SH: Adding -Werror=vla.
cflags.SH: Adding -Wextra.
cflags.SH: Adding -Wno-long-long.
cflags.SH: Adding -Wno-declaration-after-statement.
cflags.SH: Adding -Wc++-compat.
cflags.SH: Adding -Wwrite-strings.
cflags.SH: cc       = cc
cflags.SH: ccflags  = -fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_FORTIFY_SOURCE=2
cflags.SH: stdflags =  -std=c99
cflags.SH: optimize = -O2
cflags.SH: warn     =  -Wall -Werror=pointer-arith -Werror=vla -Wextra -Wno-long-long -Wno-declaration-after-statement -Wc++-compat -Wwrite-strings
Extracting cflags (with variable substitutions)
Not re-extracting config.h
Extracting makedepend (with variable substitutions)
Extracting makedepend_file (with variable substitutions)
Extracting Makefile (with variable substitutions)
Extracting myconfig (with variable substitutions)
Extracting Policy.sh (with variable substitutions)
Extracting runtests (with variable substitutions)
Extracting pod/Makefile (with variable substitutions)
Run make depend now? [y]  
cc -c -DPERL_CORE -fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_FORTIFY_SOURCE=2 -std=c99 -O2 -Wall -Werror=pointer-arith -Werror=vla -Wextra -Wno-long-long -Wno-declaration-after-statement -Wc++-compat -Wwrite-strings -fPIC generate_uudmap.c
cc -o generate_uudmap -fstack-protector-strong -L/usr/local/lib generate_uudmap.o -lpthread -ldl -lm -lutil -lc 
./generate_uudmap uudmap.h bitcount.h mg_data.h
sh ./makedepend MAKE="make" cflags
make[1]: Entering directory '/sources/perl-5.42.0'
rm -f opmini.c
rm -f perlmini.c
rm -f universalmini.c
/usr/bin/ln -s op.c opmini.c
/usr/bin/ln -s perl.c perlmini.c
/usr/bin/ln -s universal.c universalmini.c
echo av.c builtin.c caretx.c class.c deb.c doio.c doop.c dquote.c dump.c globals.c gv.c hv.c keywords.c locale.c mathoms.c mg.c mro_core.c numeric.c op.c pad.c peep.c perl.c perlio.c perly.c pp.c pp_ctl.c pp_hot.c pp_pack.c pp_sort.c pp_sys.c reentr.c regcomp.c regcomp_debug.c regcomp_invlist.c regcomp_study.c regcomp_trie.c regexec.c run.c scope.c sv.c taint.c time64.c toke.c universal.c utf8.c util.c  miniperlmain.c opmini.c perlmini.c universalmini.c | tr ' ' '\n' >.clist
make[1]: Leaving directory '/sources/perl-5.42.0'
make[1]: Entering directory '/sources/perl-5.42.0'
sh ./makedepend_file av.c av.c.depends cflags
sh ./makedepend_file builtin.c builtin.c.depends cflags
sh ./makedepend_file caretx.c caretx.c.depends cflags
sh ./makedepend_file class.c class.c.depends cflags
sh ./makedepend_file deb.c deb.c.depends cflags
sh ./makedepend_file doio.c doio.c.depends cflags
sh ./makedepend_file doop.c doop.c.depends cflags
Finding dependencies for av.o
Finding dependencies for builtin.o
Finding dependencies for caretx.o
Finding dependencies for class.o
Finding dependencies for doio.o
Finding dependencies for deb.o
Finding dependencies for doop.o
sh ./makedepend_file dquote.c dquote.c.depends cflags
sh ./makedepend_file dump.c dump.c.depends cflags
sh ./makedepend_file globals.c globals.c.depends cflags
sh ./makedepend_file gv.c gv.c.depends cflags
Finding dependencies for dquote.o
sh ./makedepend_file hv.c hv.c.depends cflags
Finding dependencies for dump.o
sh ./makedepend_file keywords.c keywords.c.depends cflags
Finding dependencies for globals.o
sh ./makedepend_file locale.c locale.c.depends cflags
Finding dependencies for gv.o
Finding dependencies for hv.o
Finding dependencies for keywords.o
Finding dependencies for locale.o
sh ./makedepend_file mathoms.c mathoms.c.depends cflags
sh ./makedepend_file mg.c mg.c.depends cflags
Finding dependencies for mathoms.o
sh ./makedepend_file mro_core.c mro_core.c.depends cflags
Finding dependencies for mg.o
sh ./makedepend_file numeric.c numeric.c.depends cflags
sh ./makedepend_file op.c op.c.depends cflags
Finding dependencies for mro_core.o
sh ./makedepend_file pad.c pad.c.depends cflags
Finding dependencies for numeric.o
Finding dependencies for op.o
sh ./makedepend_file peep.c peep.c.depends cflags
Finding dependencies for pad.o
Finding dependencies for peep.o
sh ./makedepend_file perl.c perl.c.depends cflags
Finding dependencies for perl.o
sh ./makedepend_file perlio.c perlio.c.depends cflags
sh ./makedepend_file pp.c pp.c.depends cflags
sh ./makedepend_file pp_ctl.c pp_ctl.c.depends cflags
sh ./makedepend_file pp_hot.c pp_hot.c.depends cflags
Finding dependencies for perlio.o
Finding dependencies for pp.o
Finding dependencies for pp_hot.o
Finding dependencies for pp_ctl.o
sh ./makedepend_file pp_pack.c pp_pack.c.depends cflags
sh ./makedepend_file pp_sort.c pp_sort.c.depends cflags
Finding dependencies for pp_pack.o
Finding dependencies for pp_sort.o
sh ./makedepend_file pp_sys.c pp_sys.c.depends cflags
Finding dependencies for pp_sys.o
sh ./makedepend_file reentr.c reentr.c.depends cflags
sh ./makedepend_file regcomp.c regcomp.c.depends cflags
sh ./makedepend_file regcomp_debug.c regcomp_debug.c.depends cflags
sh ./makedepend_file regcomp_invlist.c regcomp_invlist.c.depends cflags
Finding dependencies for reentr.o
Finding dependencies for regcomp.o
Finding dependencies for regcomp_debug.o
Finding dependencies for regcomp_invlist.o
sh ./makedepend_file regcomp_study.c regcomp_study.c.depends cflags
sh ./makedepend_file regcomp_trie.c regcomp_trie.c.depends cflags
Finding dependencies for regcomp_study.o
Finding dependencies for regcomp_trie.o
sh ./makedepend_file regexec.c regexec.c.depends cflags
sh ./makedepend_file run.c run.c.depends cflags
Finding dependencies for regexec.o
sh ./makedepend_file scope.c scope.c.depends cflags
Finding dependencies for run.o
Finding dependencies for scope.o
sh ./makedepend_file sv.c sv.c.depends cflags
Finding dependencies for sv.o
sh ./makedepend_file taint.c taint.c.depends cflags
sh ./makedepend_file time64.c time64.c.depends cflags
Finding dependencies for taint.o
Finding dependencies for time64.o
sh ./makedepend_file toke.c toke.c.depends cflags
sh ./makedepend_file universal.c universal.c.depends cflags
Finding dependencies for toke.o
Finding dependencies for universal.o
sh ./makedepend_file utf8.c utf8.c.depends cflags
Finding dependencies for utf8.o
sh ./makedepend_file util.c util.c.depends cflags
sh ./makedepend_file miniperlmain.c miniperlmain.c.depends cflags
sh ./makedepend_file opmini.c opmini.c.depends cflags
Finding dependencies for util.o
Finding dependencies for miniperlmain.o
Finding dependencies for opmini.o
sh ./makedepend_file perlmini.c perlmini.c.depends cflags
Finding dependencies for perlmini.o
sh ./makedepend_file universalmini.c universalmini.c.depends cflags
sh ./makedepend_file perly.c perly.c.depends cflags
Finding dependencies for perly.o
Finding dependencies for universalmini.o
make[1]: Leaving directory '/sources/perl-5.42.0'
Updating makefile...
Now you must run 'make'.

If you compile perl5 on a different machine or from a different object
directory, copy the Policy.sh file from this object directory to the
new one before you run Configure -- this will help you with most of
the policy defaults.

